#version 430

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

// Uniforms
uniform float decayFactor; // Precomputed exp(-decayConstant * deltaTime) on CPU

// Input and output textures
layout(binding = 0, r32f) uniform image2D inputTex;
layout(binding = 1, r32f) uniform image2D outputTex;

void main() {
  ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
  ivec2 texSize = imageSize(inputTex);

  // Check bounds
  if (coord.x >= texSize.x || coord.y >= texSize.y) {
    return;
  }

  // Read current linear energy value from input texture
  float currentEnergyLinear = imageLoad(inputTex, coord).r;

  // Apply exponential decay in linear domain using precomputed factor
  // Linear decay: energy_new = energy_old * exp(-k*dt)
  float newEnergyLinear = currentEnergyLinear * decayFactor;
  
  // Write decayed energy to output texture
  imageStore(outputTex, coord, vec4(newEnergyLinear, 0, 0, 0));
}
