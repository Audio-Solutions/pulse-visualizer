#version 430

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

// Input and output textures
layout(binding = 0, r32ui) uniform uimage2D inputTex;
layout(binding = 1, r32ui) uniform uimage2D outputTex;
layout(binding = 2, r32ui) uniform uimage2D ageTex;

uniform float decaySlow;
uniform float decayFast;
uniform uint ageThreshold;

void main() {
  ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
  ivec2 texSize = imageSize(inputTex);

  if (coord.x >= texSize.x || coord.y >= texSize.y) {
    return;
  }

  // Read current linear energy value from input texture
  uint currentEnergyLinear = imageLoad(inputTex, coord).r;

  // Read age in frames from ageTex
  uint age = imageLoad(ageTex, coord).r; 

  float decay;
  if (age < ageThreshold - 2) {
    decay = decayFast;
  } else if (age >= ageThreshold) {
    decay = decaySlow;
  } else {
    // 2 frame lerp between decay speeds for smooth transition
    float t = float(age - (ageThreshold - 2)) / 2.0f;
    decay = mix(decayFast, decaySlow, t);
  }

  // Apply fade
  uint newEnergyLinear = uint(currentEnergyLinear * decay);

  // Write decayed energy to output texture
  imageStore(outputTex, coord, uvec4(newEnergyLinear, 0, 0, 0));
}
